function listenToFirebase(e){e&&fb.setOnStockChangedListener(e,"default",function(e){console.log("stock changed",e),APP.stock.codes=e,mbsRest.reload()})}var APP=new Vue({components:{localTable:localTable},el:"#app",data:{owner:localStorage.getItem("owner"),stock:{codes:[],stocks:[]}},computed:{mobile:detectMobile},methods:{stockGetChangeType:detectStockValueChangeType,stockGetChangeValue:getStockChangeValue,onStocksChanged:function(e){console.log("update",e),console.log(this.stock.stocks);for(var o=[],t=this.stock.stocks,s=0;s<t.length;s++)o.push(t[s].id);this.stock.codes=o,console.log(this.stock.codes),fb.write(this.owner,"default",this.stock.codes)},onPasswordKeyUp:function(e){if(13===event.keyCode){var o=e.target.value;e.target.value="",console.log(o),fb.getOwner(o,function(e){console.log(e),e&&(localStorage.setItem("owner",e),APP.owner=e,listenToFirebase(e))})}},onStockInputKeyUp:function(e){if(13===event.keyCode){var o=e.target.value;e.target.value="";for(var t=o.split(/\s*,\s*/),s=APP.stock.codes,n,c=0;c<t.length;c++)n=t[c].trim().toUpperCase(),!_ListStockInfo.hasOwnProperty(n)||n in s?console.log("Invalid:",n):s.push(n);fb.write(APP.owner,"default",s)}},doLogout:function(){this.owner=null,localStorage.removeItem("owner")}}}),fb=new Firebase;fb.init(),listenToFirebase(APP.owner);